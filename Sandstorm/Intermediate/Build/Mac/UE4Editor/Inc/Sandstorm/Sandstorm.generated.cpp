// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Sandstorm.h"
#include "Sandstorm.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeSandstorm() {}
	void Apromap::StaticRegisterNativesApromap()
	{
	}
	IMPLEMENT_CLASS(Apromap, 2218400146);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();

	SANDSTORM_API class UClass* Z_Construct_UClass_Apromap_NoRegister();
	SANDSTORM_API class UClass* Z_Construct_UClass_Apromap();
	SANDSTORM_API class UPackage* Z_Construct_UPackage_Sandstorm();
	UClass* Z_Construct_UClass_Apromap_NoRegister()
	{
		return Apromap::StaticClass();
	}
	UClass* Z_Construct_UClass_Apromap()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Sandstorm();
			OuterClass = Apromap::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_noise_stretching_mul = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("noise_stretching_mul"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(noise_stretching_mul, Apromap), 0x0000000000000005);
				UProperty* NewProp_noise_amplitude_mul = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("noise_amplitude_mul"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(noise_amplitude_mul, Apromap), 0x0000000000000005);
				UProperty* NewProp_senoid_amplitude = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("senoid_amplitude"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(senoid_amplitude, Apromap), 0x0000000000000005);
				UProperty* NewProp_node_spacing = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("node_spacing"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(node_spacing, Apromap), 0x0000000000000005);
				UProperty* NewProp_origin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("origin"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(origin, Apromap), 0x0000000000000005, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_height = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("height"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(height, Apromap), 0x0000000000000005);
				UProperty* NewProp_width = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("width"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(width, Apromap), 0x0000000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_noise_stretching_mul, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_noise_stretching_mul, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_noise_amplitude_mul, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_noise_amplitude_mul, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_senoid_amplitude, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_senoid_amplitude, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_node_spacing, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_node_spacing, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_origin, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_origin, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_height, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_height, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_width, TEXT("Category"), TEXT("Promap"));
				MetaData->SetValue(NewProp_width, TEXT("ModuleRelativePath"), TEXT("promap/promap.h"));
				MetaData->SetValue(NewProp_width, TEXT("ToolTip"), TEXT("configuration"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_Apromap(Z_Construct_UClass_Apromap, TEXT("Apromap"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(Apromap);
	UPackage* Z_Construct_UPackage_Sandstorm()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Sandstorm")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x9CF84F7B;
			Guid.B = 0xD277009D;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
